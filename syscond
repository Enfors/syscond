#!/bin/sh

CSI="\033["
green="${CSI}32m"
yellow="${CSI}33m"
red="${CSI}31m"
reset="${CSI}0m"

syscond_dir=$HOME/devel/shell/syscond
check_dir=$syscond_dir/check
report_dir=$syscond_dir/report

master_cond=0
brief_mode=0

Main() {
	if [ "$#" -lt 1 ]; then
	    echo "Usage: syscond command" >&2
	    exit 1
	fi

	arg=$1

	case $arg in
	    check)
		shift
		CommandCheck $*
		;;

	    status)
		shift
		CommandStatus $*
		;;

	    *)
		echo "Unknown command $*" >&2
		exit 2
		;;
	esac
}

#
# Check functions
#

CommandCheck() {
    if [ "$#" -ne 1 ]; then
	echo "Usage: syscond check day | hour | minute" >&2
	exit 3
    fi

    dir=$1

    case $dir in
	day)
	    ;;
	hour)
	    ;;
        minute)
	    ;;

	*)
	    echo "Usage: syscond check day | hour | minute" >&2
	    exit 4
	    ;;
    esac

    RunScriptsInDir $dir

}

RunScriptsInDir() {
    dir=$1

    for file in $check_dir/$dir/*; do
	RunScript $file
    done
}

RunScript() {
    script=$1
    script_filename=$(basename $script) # Filename without the path

    if [ ! -x $script ]; then
	echo "Ignoring non-executable file $script."
	return 1
    fi

    report_file=$report_dir/$script_filename.report

    $script >$report_file
}

#
# Status functions
#

CommandStatus() {
    master_cond=0

    while getopts ":b" opt; do
	case $opt in
	    b)
		brief_mode=1
		;;
	    \?)
		echo "Invalid option: -$OPTARG" >&2
		exit 5
		;;
	esac
    done

    VerboseMsg "=== System condition report ==="
    VerboseMsg

    for report_file in $report_dir/*.report; do
	PrintReport $report_file
    done

    master_cond_color=$(QueryCondColor $master_cond)

    VerboseMsg
    echo "=== Master condition: $master_cond_color ==="
}

Msg() {
    echo $*
}

VerboseMsg() {
    if [ $brief_mode -eq 1 ]; then
	return 0
    fi

    Msg $*
}

BriefMsg() {
    Msg $*
}

PrintReport() {
    report_file=$1

    report=$(cat $report_file)

    set $report
    
    cond=$1

    if [ $cond -gt $master_cond ]; then
	master_cond=$cond;
    fi

    shift
    text="$*"

    cond_color=$(QueryCondColor $cond)

    if [ $cond -eq 0 ]; then
	VerboseMsg "$cond_color: $text"
    else
	BriefMsg "$cond_color: $text"
    fi
}

QueryCondColor() {
    cond=$1

    case $cond in
	0)
	    echo "${green}GREEN${reset}"
	    ;;
	1)
	    echo "${yellow}YELLOW${reset}"
	    ;;
	2)
	    echo "${red}RED${reset}"
	    ;;
	*)
	    echo "IncorrectCond"
	    ;;
    esac

}


Main $*
